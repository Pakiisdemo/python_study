'''

#IPO（input  process output）程序编写方法
#即输入数据，处理数据，输出数据


1....................使用print函数
#print(value,```,sep='',end='\',file=None)
#数字，字符串""

######################################1 print（）函数

输出：
变量
数值
变量运算
字符串加'字符';"字符";''' ''';"""字符"""

a=11
b=90
print(3*5,"hello\n",a+b)
#print()
2........................不换行一次输出多个
#print(3*5)
print(12,123.345,'你好',12+2)
3......................输出ASCII吗对应字符
print ('b')
print                  (chr(98)) #使用chr()函数可及那个ASCII码转换为对应字符

b
101
#字符ASCII码


4.....................print输出中文unicode码
#中文编码范围{u4e00~u9fa5}
print("北"，ord('北')，chr(ord('北')))
北 21271 北

5.........................print函数将内容输入到文件中
print函数输出到文件中
有open和close打开和关闭
py=open('E:/text.txt','a+')
'w'为写文件操作
print('hello world\n',file=py)
py.close()

6..........................多条print函数输出结果一行显示
#print(value,```,sep='',end='\',file=None)
sep会产生分隔符(每两个字符中间都会有sep)
10 20(有sep)

a=10
b=20
print(a,b,50,60,sep=',')
10,20,50,60

print("北京",end="---->")
print("欢迎你")
北京---->欢迎你

print(a,b,end='--->')
10 20--->
#end 为结尾

7..................使用链接符链接多个字符串
print('北'+'京')
北京

print('北'+2024)
报错，不可字符和数值链接



################################################2 input()函数
8..........................input函数使用
x=input('提示文字')无论输入数据是什么，x的数据类型都是字符串型
a=input('输入一个数')   #输入值的类型为str型所以要进行转换才能进行后续运算，且通过+相连接后为拼接而非相加

name=input("北京")
print("欢迎你"+name)

北京666
欢迎你666
9...............................输入整数类型数据
想要接受整数类型并保存到变量中，要用int内置函数

name=int(input("北京"))
print(3+name)


print(type(int(a)))
x=input('输入加数：')
y=input('输入另一个加数')
print(int(x+y))

10.......................单行注释
#单行注释
11....................多行注释
'''   '''
"""也可以为多行注释"""

------------中文声明注释，一定要写在第一行------
#coding=utf-8  (要带#号，且在第一行)
#coding=gbk   等多总格式（保存后的.py文件格式）

12.........代码缩进
代码缩进，每行语句开始前的空白区域，表示程序见的包含和层次关系

一般代码
print('hello')
print('world')

代码缩进如类的定义 函数的定义等,流程控制语句即异常处理语句等行尾的冒号和下一行的缩进（4给空额作为一个缩进量）
class student:
    pass

    
class student：
_ _ pass(四个空格)
def fun():
    pass
    
3.1............................查询python保留字
# 4保留字和表示符不能进行命名（）
python中北赋予特定意义的一些单词 and as int if def class 等（35个）
用keyword内置函数查看保留字

import keyword as k

print(k.kwlist)
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 
'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for',
 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 
 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']

 
import keyword
print(len(keyword.kwlist))
 35
 一共35个

 保留字严格区分大小写

3.2..................................严格区分大小写
 true="真"  小写t故不是保留字
 True="真"(报错，保留字不可做变量)

python标识符命名规则 
 可以为字符（英文，中文），下划线'_'和数字，但第一个字符不能是数字如:  1ture
标识符严格区分大小写
a和A，AS和aS是两个标识符
下划线开头标识符有特殊意义，一般应该避免使用相识标识符
不建议中文作为标识符


模块名尽量短小，全部小写，可以用下划线分割多个字母，grame_main

包名尽量短小，全部用小写，不推荐下划线com.ysjpython，不推荐com_ysjpython

类名采用首字母大写（Pascal风格）如MyClass

模块内部用“_”+Pascal风格的类名组成如MyClass中内部类_innerMyClass

函数，类的属性和方法命名，全部用小写字母，多个字母间用下划线分隔


常量命名全部大写，可使用下划线

使用单下划线"_"开头模块或函数是受保护的在使用“from XXXX import *”语句从模块导入时，这写受保护的模块变量和函数不能被导入

使用双下划线"__"开头的实例变量或方法是类私有的

以双下划线开头和结尾的是python的专用标识，例如__init__()表示初始化函数
==================================================变量
#5 变量  (其中变量名只想id，相当于指针)
name='朱丽叶'#变量赋值
print('标识',id(name))
print('类型',type(name))
print('值',name)
 
变量名=value(值)                              栈内存                     堆内存
name=666   #将666这个值赋值给name这个变量     |           |          |         |
内存为快递代收点，变量为取件码                 |           |         |          |
在堆内存中开给空间将666放入                   |        /--|--->      |   666    |
然后栈内存中变量name指向堆内存空间            |   name/    |          |         |   



变量类型由赋值的类型决定，赋的值为8则为整数型
赋的值为“你好”则变量类型为字符串性，故python为动态语言


3.3....................变量的定义和使用
name1=8 #创建一个整形变量name1并为其赋值8
name="字符串"  #创建一个字符性变量并为其赋值“字符串”
type()为擦看变量类型


name1=89
name2="char"
print(type(name1),type(name2))

<class 'int'> <class 'str'>
python可以动态修改变量类型（通过赋值不同类型值，则变量类型也在变）

name=8
print(name,type(name)
      )
name="cahr"
print(name,type(name))
8 <class 'int'>
cahr <class 'str'>

#且多次赋值变量会指向最后一个赋值的内容,其余前面赋值的内容变成内存垃圾
name='123'
print(name)
name='345'
print(name)


且允许多个变量指向一个值
name=noo=12
print(name,noo)
print(id(name),id(noo))
#id()查看对象内存地址
12 12
1871140749904 1871140749904
内存地址相同（只是栈地址不同，但是堆地址是一个）


变量命名必须是一个有效标识符且不能用保留字
谨慎使用小写i和大写O（看不清）
选择相互对应意义的单词更好

常量则全部用大写字母和下划线命名

3.4..............................常量定义
pi=3.1415926  (按规范应该归类为变量)
PI=3.1415926  按规范则为常量



===================================数值类型
#7常见数据类型
a=98
b=98.098
c='123abc'
d=bool(90)
print(type(a),type(b),type(c),type(d))

<class 'int'> 
 <class 'float'> 
 <class 'str'>
 <class 'bool'>
3.5.....................整数类型使用

#整数类型（无小数部分，正整数，负整数，0）{python中不可变数据类型}
0b 二进制
0o八进制
0x 十六进制
均为整数

#3 二进制
print(ord('乘'))
print(0b010101001001010)

20056
10826

3.6........................浮点数类型使用

#浮点型数据，进行运算时要注意小数点后位数不确定,且有不确定性
print(0.1+0.2)
0.30000000000000004

可以使用round(0.1+0.2,2)结果保留两位小数
print(round(0.1+0.2,2))

#也可以导入decimal模块解决，但是还是会有不确定性
from decimal import  Decimal
print(Decimal('1.1')+Decimal('2.2'))


x=10
y=10.0
print(x,y,type(x),type(y))
10 10.0 <class 'int'> <class 'float'>

科学计数法表示

x=1.99E1413
print(x,type(x))
inf <class 'float'>

python中复数于数学中复数表示形式完全一致
实数部分为.real   虚数部分为.imag表示


3.7....................复数类型的使用
x=12+13j

print(x.real)
print(x.imag)
12.0
13.0


===========字符串类型
字符串的界定符：单引号，双引号，三引号（三个单引号，三个双引号用于定义多行字符串）
字符串加'字符';"字符";''' ''';"""字符"""

print('你好',"你好",'''''',"""你好""",sep='---')  ''''''中间为你好



x=''''''中间内容为
省份：翻斗花园省
市：饭都花园市
区：饭都花园小区

print(x)

省份：翻斗花园省
市：饭都花园市
区：饭都花园小区

你好---你好---你好---你好

#2 转义字符,即反斜杠
#\n换行

#\b即这一位置的前一位开始进行后续输出！
#\t即从第一个位置开始进行四位补齐，到\t处若不足4位则对应差多少补多少，要是零个，则直接补4个空位
# （一个制表位8个字符前面都为8的整数，后面几个少了几个则补几个空）
#\r即其后面所有内容顶格开始输出，前面内容删掉
#\'单引号
#\"双引号
#\\一个反斜杠
转移字符失效为：则前面添加 r或R  即可
print(r'老师说\大家好')#当不需要反斜杠起作用（转义时）则可以在前面加R或者r

print('hello000world9090909\n','\bhello\tworld9090909\n','hello\rworld')
hello000world9090909
hello   world9090909
worldo


print('\\\\www.\\wo')
print("老师说：\"dajiahao\"")

输出为：
\\www.\wo                  #会吞一个\
老师说："dajiahao"          #单个斜杠不起作用
老师说\大家好  

堆字符串某个字符的检索为索引
<----------为反向递减序号 0 - n
---------->为正向递增序号-n ~ -1
0到n-1
对字符串某个子串或区间检索为切片，切片语法结构
字符串或字符串变量[N:M]

s='1234567890'
print(s[0],s[-10])#正向序号和反向序号
print('1234567890',[4-1])
print('1234567890',[-7+1])
print(s[2:5])#也可反向s[-8:-3]
s[:5]#默认从0开始到5结束（不包含5）
s[5:]#默认切到字符串结尾


1 1
1234567890 [3]
1234567890 [-6]
345


常用字符串操作
x+y  字符串x于y连接起来
x*n或n*x 复制n次字符串x
x in s若x为s子串，则结果为True，否则为False

x="北京"
y="heloo"
print(x+y)#xy连接在一起
print(x*10)#复制x10次
print(10*x)#复制x10次
print('北京'in x)

北京heloo
北京北京北京北京北京北京北京北京北京北京
北京北京北京北京北京北京北京北京北京北京
True


=============================布尔类型（不可变数据类型）
#布尔类型，输出为True和False，也可以进行运算操作，谨代表数字0和1

True为1
False为0

bool为False情况如下
False或者None
数值中0，包含0，0.0，虚数0
空序列，包含空字符串，空元组，空列表，空字典，空集合
自定义对象的实例，该对象的__bool__()方法返回False或__len__()方法返回0


x=True
print(x)
print(type(x))
print(x+10)
print(False+12)

True
<class 'bool'>
11
12

print(bool(15),bool(0),bool(0.0),bool(''),sep='------')
True------False------False------False
================================数据类型之间转换
#类型转换,主要为了方便运算和输出#print('老师'+19);将不同数据进行拼接在一起
(显式转换，隐式转换)

int()
float()转换为浮点
str()转换为字符串
chr()整数转换为字符
ord()字符转换为整数值
hex()转换十六进制
oct()转换八进制
bin()转换二进制

隐式转换

整数转换为浮点
x=10
y=3
z=x/y
print(z,type(z))
3.3333333333333335 <class 'float'>

print(int('100')+int('200'))
300

print(int('18a'))报错，因为18a不是一个十进制数
print(int('3.14'))报错，因为‘3.14’这个字符串也不是整数
print(float('45a.979'))因为a没办法转


1.三种类型均可转换，但是字符型转整数型时不能为字符串和含小数的数字

print(hex(2555))
print(oct(2555))
print(bin(2555))

0x9fb
0o4773
0b100111111011

2.文字无法转换为浮点型，整数转化时末尾填零


=============================eval函数使用
eval为内置函数用于去掉字符串最外层的引号
eval常于input（）一起用
变量=eval（字符串）

s='3.14+3'
print(s,type(s))
x=eval(s)
print(x,type(x))

3.14+3 <class 'str'>
6.140000000000001 <class 'float'>

age=eval(input("输入身高"))
print(age,type(age))

输入身高188
188  int

a='你好'
print(a)
print(eval('a'))
print(type(a))

你好
你好
<class 'str'>

不可以print(eval(a))    要加''
不可以print(eval('你好'))会报错



========================================算数运算

#运算符
赋值运算
比较运算
布尔运算
位运算

#标准算术运算符，加减乘除;;;算术运算符，标准算术运算符，取余运算符，幂运算符

加+
减-
乘*
除/  会产生浮点数
整除//
取余%
幂运算**


print(1+2,3-4,7*8,5/4,5//4)#整除用双斜杠。
3 -1 56 1.25 1

=================================================================================================================
#运算符的优先级
算数运算（**>*,/,//,%>+,-）》》位运算(>>,<<  >&>|)》》比较运算(<,>,>=,<=,==,!=)》》布尔运算(and>or)》》赋值运算(=)
**
~,+,-    取反和正负号
* / % //
+ -
<< >>
&
^
|
< <=  >  >=  != ==
=
有括号先算括号
====================================================================================================================

#赋值运算
涉及到执行顺序   右-》左
链式赋值   a=b=c=20
参数赋值    +=    -=   /=  //=  %=
x+=y     x=x+y
x-=y     x=x-y
x*=y     x=x*y
x/=y     x=x/y
x%=y     x=x%y
x**=y    x=x**y
x//=y    x=x//y

x=3
y=4
x+=y
print(x)

7

a=b=c=z=10
zhi=9+8*8
z+=2
a*=2
b//=2
c%=2
print(zhi,a,b,c,z,id(a),id(b),id(z))#应为赋值相当与创建一个指针指向存储位置处

73 20 5 0 12 2425235506000 2425235505520 2425235505744

系列解包赋值   a,b,c=20,30,40


a,b,c=20,30,40
print(a,b,c)
20 30 40

a,b,c=20,90,80#这样产生的地址不一样了，和a=b=c=20不一样，且可以单值不同
#可以用来进行交换
a,b=b,a
print(a,b,c,id(a),id(b),id(c))


90 20 80 1347478883344 1347478881104 1347478883024


交换两个值
a,b=b,a


#比较运算
>
<
==
!=
>=
<=
结果为bool类型

a=40<90
b=30>90
c=a==b

#c='hallo world'>90   不可以数字和字符进行比较
d='hallo world'<'hallo worlde'
print(a,b,c,d,type(a))
#==比较的是值， 比较标识使用的是is

True <class 'bool'>




#布尔运算符  逻辑运算符

and   结合方向   从左到右   A and B 当A为False时第二个B不会被计算直接返回False
or               从左到右   A or B 当A为True时第二个表达式不会被执行直接返回True
not              从右到左（not后面表达式计算完成后字进行not计算）
in
not in

a=bool(1)
b=bool(0)
print(a,b,a and b,a or b,not a)#!= 为不等于运算

True False False True False


#布尔值为负
print('----------一下均为负--------')
print(bool(False))
print(bool(None))
print(bool(0))
print(bool(0.00))
print(bool('     '))#字符串中包含空格，所以油空格就不算空字符
print(bool(''))
print(bool([]))#空列表
print(bool(list
           ()))#空列表
print(bool(()))#空元组
print(bool(tuple()))#空元组
print(bool
      ({}))#空字典
print(bool(dict()))#空字典
print(bool(set()))#空集合

print('---------以下均为True------------')
print(bool(90))
print(bool('helloworld'))
print(bool(True))
#还有非空集合字典元组

----------一下均为负--------
False
False
False
False
True 
False
False
False
False
False
False
False
False
---------以下均为True------------
True
True
True

#位运算（吧数字看作二进制数进行计算）

&与   全一为一，否为零
|或   全零为零，否为一
！非    非零即一

有选择功能！！！！&选择小的    |选择大的
print(12&8,12|8,sep='-----')
8-----12

^按位异或  对应两位相同为0不同为1
~按位取反  对应位取反

print(32^29)
61

<<左移   高位溢出舍弃，低位补零(溢出则丢弃)（乘法）
>>右移   低位溢出舍弃，高位补零（除法）
a=101010
b=100000    #怎么把十进制输出为二进制？  bin()   oct()  hex()
c=bin(101010)

#还有一种转换格式 int('010101010',2)   int('76',8)   int('ab9',16)
print(int('010101010101010',2))

#通过左右移动实现乘除！
b=0b100000
c=b>>1
print(b,b>>1)#右移1位相当于除2
print(b<<1)#左移一位相当于乘2



#取余运算（取模）
print(5%4)#取余运算，取余数
print(2**3)#幂运算
#print(2^3)这个运算很迷

#当遇到一正一负时，取余和整除就会有一些问题
print(9//2,-9//-2)   #同正同负均无问题
print(-9//2,9//-2)     #一正一负要向负方向取整
print(9%-2,-9%2)#余数=被除数-除数*商（向下取整后的商）

'''




